{
  "cells": [
    {
      "metadata": {
        "collapsed": true
      },
      "cell_type": "markdown",
      "source": "# Module 4: Using Data from a SMART to Address Primary Aims (Part II) \n# R Code Tutorial <br/>\n\n**Authors:** Nicholas J. Seewald, Daniel Almirall, Inbal Nahum-Shani, Audrey Boruvka, and Susan A. Murphy\n\n**Date:** March 20, 2020\n\nThis file provides example R code to analyze *simulated* data that was generated to mimic data arising from the ADHD SMART study (PI: William Pelham). An accompanying handout (\"ADHD Handout.pdf\") describes the variables in the data.\n\nTranslation of SAS code from Modules 3 and 4 into R is by Audrey Boruvka and Nicholas J. Seewald [(email)](mailto:nseewald@umich.edu). Notebooks created by [Nicholas J. Seewald](https://nickseewald.com).\n\n### Contents:\n- [Part (a): Compare means from two embedded adaptive interventions](#part-a)\n- [Part (b): Compare all four embedded AIs with one regression](#part-b)"
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "## Setup\nAs in [Module 3](module3tutorial.ipynb), we will begin by loading the data. We omit summaries here for brevity; see [module3tutorial.ipynb](module3tutorial.ipynb) for details on the data we will be using in this tutorial. The block of code below performs all necessary pre-processing steps from Module 3 related to loading and sorting the data, as well as centering covariates. **See Module 3 for details on this code; otherwise just run the cells and move to Part (a).**"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "library(geepack)\nsource('functions.R')",
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": "function 'estimate' loaded successfully.\n",
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "adhd <- read.csv(\"adhd-simulated-dataset.csv\")\n\n# R is case-sensitive! Avoid issues by changing variable names to all lowercase\nnames(adhd) <- tolower(names(adhd))\n\n# Handle missing data: set \"NaN\" values to \"NA\" (R's missing data value)\nadhd$o21[is.nan(adhd$o21)] <- NA\nadhd$a2[is.nan(adhd$a2)] <- NA\n\n# Sort data by ID\nadhd <- adhd[order(adhd$id), ]\n\nadhd$o11c <- with(adhd, o11 - mean(o11))\nadhd$o12c <- with(adhd, o12 - mean(o12))\nadhd$o13c <- with(adhd, o13 - mean(o13))\nadhd$o14c <- with(adhd, o14 - mean(o14))\n## o21 is measured among non-responders only\nadhd$o22c <- with(adhd, o22 - mean(o22))\n\n## center baseline variables using mean among non-responders\nadhd$o11cnr <- adhd$o12cnr <- adhd$o13cnr <- adhd$o14cnr <- NA\nadhd$o21cnr <- adhd$o22cnr <- NA\nadhd$o11cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o11 - mean(o11))\nadhd$o12cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o12 - mean(o12))\nadhd$o13cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o13 - mean(o13))\nadhd$o14cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o14 - mean(o14))\nadhd$o21cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o21 - mean(o21))\nadhd$o22cnr[adhd$r == 0] <- with(subset(adhd, r == 0), o22 - mean(o22))",
      "execution_count": 3,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "As a reminder, the `adhd` dataset contains the following variables. A more detailed summary is available in [this handout](https://gettingsmartworkshop-nseewald.notebooks.azure.com/j/files/ADHD_Data_Description_Handout.pdf).\n\n| Variable Name | Variable Type | Description \n| -- | -- | :---\n| `id` | Integer | Student ID number \n| `o11` | Baseline covariate; binary (0/1) | Oppositional defiant disorder diagnosis (1 = yes, 0 = no) \n| `o12` | Baseline covariate; continuous | ADHD severity at end of previous school year (0 - 3; higher values are fewer symptoms) \n| `o13` | Baseline covariate; binary (0/1) | Medication prior to first-stage intervention (1 = yes; 0 = no) \n| `o14` | Baseline covariate; binary (0/1) | Race (1 = white; 0 = non-white) \n| `a1` | First-stage intervention indicator (-1/1) | -1 = MED; -1 = BMOD \n| `r` | Response indicator (0/1) | 0 = Participant did not respond to first-stage intervention;  1 = participant responded\n| `o21` | Intermediate outcome; continuous | Number of months until non-response (max of 8 months) \n| `o22` | Intermediate outcome; binary (0/1) | Adherence to first-stage intervention (1 = high adherence; 0 = otherwise)\n| `a2` | Second-stage intervention indicator (-1/1) | -1 = AUGMENT; 1 = INTENSIFY\n| `y` | Outcome (continuous) | Participant's school performance at end of school year (1-5; higher is better)"
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "## <a name=\"part-a\"></a>Part (a): Estimating the mean outcome under an embedded adaptive intervention\nA common primary aim in a SMART is to compare the mean outcomes under two embedded adaptive interventions which recommend different first-stage intervention options. Before we can make that comparison, it's useful to explore how to estimate the mean outcome under *one* embedded adaptive intervention.\n\nIn the ADHD study, there are **four** embedded adaptive interventions:\n1. MED  (A1 = -1) then AUGMENT   (A2 = -1) if non-response\n2. BMOD (A1 = 1)  then AUGMENT   (A2 = -1) if non-response\n3. MED  (A1 = -1) then INTENSIFY (A2 = 1)  if non-response\n4. BMOD (A1 = 1)  then INTENSIFY (A2 = 1)  if non-response"
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "### Estimate the mean outcome under (MED, AUGMENT)\nWe'll focus on AI 1 (MED, AUGMENT) for now. The process is analogous for the other embedded AIs.\n\nFirst, we'll create an indicator variable for whether or not an individual is consistent with (MED, AUGMENT). Call it `z1`. We define it as follows:\n$$ Z_1 = \\left\\{\n\\begin{array}{rl}\n    1 & \\text{consistent with (MED, AUGMENT)} \\\\\n    -1 & \\text{otherwise}\n\\end{array}\\right.. $$"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "# Everyone starts with z1 = -1 (MED); add 2 if a1 = 1 and a2 is either NA (if responder) or -1 (AUGMENT; if non-responder)\nadhd$z1 <- -1 + 2 * with(adhd, a1 == -1 & a2 %in% c(NA, -1))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "In order to account for imbalance (by design) in the numbers of responders and non-responders, we need to apply weights. Remember that the probability that a responder follows a given adaptive intervention is $1/2$, and the probability that a non-responder is consistent with an AI is $1/2 \\times 1/2 = 1/4$. So, we'll weight responders by 2 and non-responders by 4.\n\nWe'll create a new variable in the data called `w`:"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "adhd$w <- with(adhd, 2 * r + 4 * (1-r))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "We can now run a *weighted* regression. As above, we'll use `geeglm()`, this time specifying the `weights` argument in order to use the weights we've created. The model we'll use to estimate the mean outcome under AI 1 is\n$$\\mu(\\mathbf{b}) := E[Y\\mid Z_1] = b_0 + b_1 Z_1,$$\nwhere $Z_1$ is the indicator we created above. `geeglm()` finds $\\hat{\\mathbf{b}}$ by solving the following estimating equations:\n$$0 = E\\left[W(A_1, R, A_2)\\cdot D \\cdot \\left(Y - \\mu(\\mathbf{b})\\right)\\right].$$"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "model3 <- geeglm(y ~ z1, weights = w, id = id, data = adhd)\nestimate(model3,\n         rbind(\"Mean Y under AI #1 (MED, AUGMENT)\" = c(1, 1)))",
      "execution_count": null,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "The estimated mean outcome had everyone in the SMART been treated consistent with (MED, AUGMENT) is 2.8649. The p-value is quite small, but remember this is for the test of $H_0: \\mathbf{c}^\\top \\mathbf{b} = 0$ vs. $H_1: \\mathbf{c}^\\top \\mathbf{b} \\neq 0$. Here, this is a test for whether the mean outcome is zero, which is generally uninteresting. Our focus is on the estimate and confidence interval, here.\n\n### Estimate the mean outcome under (BMOD, AUGMENT)\nWe can repeat the above procedure for the (BMOD, AUGMENT) adaptive intervention. We create a new indicator, $Z_2$, for consistency with this AI, then once again perform a weighted regression."
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "# Everyone starts with z1 = 1 (BMOD); add 2 if a1 = 1 and a2 is either NA (if responder) or -1 (AUGMENT; if non-responder)\nadhd$z2 <- -1 + 2 * with(adhd, a1 ==  1 & a2 %in% c(NA, -1))\n\n# Run weighted regression\nmodel4 <- geeglm(y ~ z2, weights = w, id = id, data = adhd)\n\nestimate(model4,\n         rbind(\"Mean Y under AI#2 (BMOD, AUGMENT)\" = c(1, 1)))",
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ERROR",
          "evalue": "Error in with(adhd, a1 == 1 & a2 %in% c(NA, -1)): object 'adhd' not found\n",
          "traceback": [
            "Error in with(adhd, a1 == 1 & a2 %in% c(NA, -1)): object 'adhd' not found\nTraceback:\n",
            "1. with(adhd, a1 == 1 & a2 %in% c(NA, -1))"
          ]
        }
      ]
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "## <a name=\"part-b\"></a> Part (b): Compare means from two embedded adaptive interventions\nThe following code is used to estimate mean outcomes under AI 1, denoted (MED, AUGMENT), vs. AI 2, denoted (BMOD, AUGMENT). The goal is to do this simultaneously (i.e., with one regression). This also faciliates making inferences about the difference in the mean of these AIs.\n\nThe regression below represents an intuitive (yet less efficient) way to compare these adaptive interventions. We use only data from participants who are consistent with one of the two AIs we're comparing. We will do this with the `subset` argument to `geeglm()`. We will provide a logical statement (something that evaluates to either `TRUE` or `FALSE`) identifying the subset of observations we wish to use in the analysis. Here, we want to include only individuals who have $Z_1 = 1$ or $Z_2 = 1$, since these will be the individuals consistent with (MED, AUGMENT) and (BMOD, AUGMENT), respectively. In R code, this statement becomes `z1 == 1 | z2 == 1`. The double equals sign `==` is \"logical equality\" (as opposed to one equals sign, which is used to separate the argument names from their values), and the pipe `|` is [\"logical OR\"](https://en.wikipedia.org/wiki/Logical_disjunction). \n\nUsing the `subset` argument to restrict ourselves to using only observations for which $Z_1=1$ or $Z_2 = 1$ has an interesting consequence: *only one indicator is needed in the regression*. Since, in our subset, if $Z_1 = 1$, then $Z_2$ must be $-1$, and vice versa. Therefore, we will fit the model\n$$ E[Y\\mid Z_1] = \\beta_0 + \\beta_1 Z_1.$$\nNotice that $E[Y\\mid Z_1=1] = \\beta_0 + \\beta_1$ is the mean outcome under (MED, AUGMENT), and $E[Y\\mid Z_1=-1]=\\beta_0 - \\beta_1$ is the mean outcome under (BMOD, AUGMENT). The difference in means is given by $2\\beta_1$. "
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## Conduct a regression analysis to compare mean outcomes under AI#1 vs AI#2\nmodel5 <- geeglm(y ~ z1, weights = w, id = id, data = adhd,\n                 # Only use individuals for whom z1 OR z2 is 1\n                 subset = z1 == 1 | z2 == 1)\n\nestimate(model5,\n         rbind(\"Mean Y under AI#1 (MED, AUGMENT)\"  = c(1,  1),\n               \"Mean Y under AI#2 (BMOD, AUGMENT)\" = c(1, -1),\n               \"Difference AI#1 - AI#2\"            = c(0,  2)))",
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "                                  Estimate 95% LCL 95% UCL     SE p-value\nMean Y under AI#1 (MED, AUGMENT)    2.8649  2.5305  3.1992 0.1706  <1e-04\nMean Y under AI#2 (BMOD, AUGMENT)   3.5067  3.1643  3.8490 0.1747  <1e-04\nDifference AI#1 - AI#2             -0.6418 -1.1203 -0.1633 0.2442  0.0086"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "markdown",
      "source": "The results suggest that AI 2, (BMOD, AUGMENT), causes a higher mean outcome than AI 1 (MED, AUGMENT), and the difference is statistically significant at the 5% level. Pay attention to the standard error of this contrast, though: $s.e.(2\\hat{\\beta_1})=0.2442$. \n\nAn easy way to improve the statistical efficiency of this analysis (i.e., lower the standard error of $2\\hat{\\beta}_2$) is to adjust for prognostic baseline covariates. Here, we'll add $O_{12c}$ and $O_{14c}$ (prior medication and race, respectively)"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## Conduct a regression analysis to compare mean outcomes under AI#1 vs AI#2\n## adjusting for baseline covariates O12c and O14c;\n\nmodel6 <- geeglm(y ~ z1 + o12c + o14c, weights = w, id = id, data = adhd,\n                 # Only use individuals for whom z1 OR z2 is 1\n                 subset = z1 == 1 | z2 == 1)\nestimate(model6,\n         rbind(\"Mean Y under AI#1 (MED, AUGMENT)\"  = c(1,  1, 0, 0),\n               \"Mean Y under AI#2 (BMOD, AUGMENT)\" = c(1, -1, 0, 0),\n               \"Difference AI#1 - AI#2\"            = c(0,  2, 0, 0)))\n",
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "                                  Estimate 95% LCL 95% UCL     SE p-value\nMean Y under AI#1 (MED, AUGMENT)    2.8842  2.5919  3.1765 0.1491  <1e-04\nMean Y under AI#2 (BMOD, AUGMENT)   3.3727  3.0542  3.6912 0.1625  <1e-04\nDifference AI#1 - AI#2             -0.4884 -0.9282 -0.0487 0.2244  0.0295"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "markdown",
      "source": "Notice here that the standard error of the difference in means, $s.e.(2\\hat{\\beta}_1)$, has decreased here to $0.2244$: controlling for baseline covariates yields smaller standard errors and thus narrower confidence intervals. \n\nYou may also notice that the parameter estimates have changed -- this is because we are now addressing a different scientific question than before. In `model5`, we are interested in finding the difference in mean outcomes between two embedded adaptive interventions; in `model6`, we are again interested in that difference in mean outcomes, but this time adjusted for a child's history of medication for ADHD, as well as the child's race."
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "## <a name=\"part-c\"></a>Part (c): Compare all four embedded AIs with one regression\n\nWe have now seen strategies for estimating the mean outcome under a single embedded adaptive intervention and for comparing the mean outcomes of two embedded adaptive interventions. \n\nOften, we are interested in performing a *single* regression to estimate and compare the mean outcomes of all embedded adaptive interventions. To do this, we will use a \"weighted and replicated\" regression approach.\n\nBecause responders in the ADHD SMART are consistent with more than one adaptive intervention, we need to trick R into using their data twice. We call this trick *\"replication\"*. We will create two observations for each responder, and, for each pair, assign one of them $A_2 = 1$ and the other $A_2 = -1$. \n\nResponders to med contribute to (bmod, add med) and (med, intensify)\nResponders to bmod contribute to (med, add bmod) and (bmod, intensity)\nSo replicate responders, assigning original to a2 = -1 (augment)\nand replicates to a2 = 1 (intensify)"
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "We will create a new dataset, called `adhd.rep`, which contains the replicated data. The way we do this is to use `rbind()` (row bind) on two `data.frame` objects: the first is the original copy of `adhd`; the second is the subset of `adhd` which contains only responders. Each of those `data.frame`s also has a new variable, `obs`, which identifies the \"original\" observation and its \"replicate\". "
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "# Replicate the data\nadhd.rep <- rbind(data.frame(adhd, obs = 1),\n               data.frame(subset(adhd, r == 1), obs = 2))",
      "execution_count": 7,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "Now, we'll assign second-stage treatment to each of the replicates. Depending on whether an individual is a responder, assign `a2 == -1` to responders with `obs == 1` and `a2 == 1` to `obs == 2` responders. Then sort the data."
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "adhd.rep$a2[adhd.rep$r == 1] <- c(-1, 1)[with(adhd.rep, obs[r == 1])]\n\n## NOTE: geeglm needs data to be sorted by cluster id \n## (here a \"cluster\" is a single person in the SMART)\nadhd.rep <- adhd.rep[order(adhd.rep$id), ]",
      "execution_count": 8,
      "outputs": []
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "We can check to see if the replication worked by cross-tabulating `a2` and `r`. In the first table, we look at the original data, `adhd`; in the second table, we examine `adhd.rep`."
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## Cross-tabulate R and A2 in the original data\nwith(adhd, table(r, a2, useNA = \"ifany\"))",
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "   a2\nr   -1  1 <NA>\n  0 49 50    0\n  1  0  0   51"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## For comparison, cross-tabulate R and A2 in the replicated data\nwith(adhd.rep, table(r, a2))",
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "   a2\nr   -1  1\n  0 49 50\n  1 51 51"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## To see the replicated structure, print observations 45-65 in the new data\nadhd.rep[45:65, ]",
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "    id o11 o12         o13 o14 a1 r o21 o22 a2 ... o14cnr     o13cnr    \n32  32 0   -2.85948543 0   1    1 1 NA  0   -1 ...         NA         NA\n321 32 0   -2.85948543 0   1    1 1 NA  0    1 ...         NA         NA\n33  33 1   -1.19879945 1   1    1 0  6  1    1 ...  0.1919192  0.7070707\n34  34 0    0.09602856 0   1    1 0  7  0    1 ...  0.1919192 -0.2929293\n35  35 1    0.46216646 0   1    1 0  8  0   -1 ...  0.1919192 -0.2929293\n36  36 1   -0.15586258 0   1   -1 0  1  0    1 ...  0.1919192 -0.2929293\n37  37 0    0.87496507 0   1   -1 1 NA  1   -1 ...         NA         NA\n371 37 0    0.87496507 0   1   -1 1 NA  1    1 ...         NA         NA\n38  38 0    0.01974426 1   0   -1 0  5  1   -1 ... -0.8080808  0.7070707\n39  39 1    1.52923952 1   1   -1 1 NA  1   -1 ...         NA         NA\n391 39 1    1.52923952 1   1   -1 1 NA  1    1 ...         NA         NA\n40  40 1    0.42969104 0   0    1 0  4  1   -1 ... -0.8080808 -0.2929293\n41  41 0    0.38763663 1   1   -1 1 NA  0   -1 ...         NA         NA\n411 41 0    0.38763663 1   1   -1 1 NA  0    1 ...         NA         NA\n42  42 0    0.38898363 0   1    1 0  3  0   -1 ...  0.1919192 -0.2929293\n43  43 0    0.15206684 0   0    1 1 NA  1   -1 ...         NA         NA\n431 43 0    0.15206684 0   0    1 1 NA  1    1 ...         NA         NA\n44  44 0    1.26222594 0   1   -1 0  2  0   -1 ...  0.1919192 -0.2929293\n45  45 1    1.07428564 1   1   -1 1 NA  0   -1 ...         NA         NA\n451 45 1    1.07428564 1   1   -1 1 NA  0    1 ...         NA         NA\n46  46 0   -1.42125894 0   0   -1 0  1  0   -1 ... -0.8080808 -0.2929293\n    o12cnr      o11cnr     o22cnr     o21cnr     z1 z2 w obs\n32           NA         NA         NA         NA -1  1 2 1  \n321          NA         NA         NA         NA -1  1 2 2  \n33  -1.05412743  0.6767677  0.5252525  1.4141414 -1 -1 4 1  \n34   0.24070059 -0.3232323 -0.4747475  2.4141414 -1 -1 4 1  \n35   0.60683848  0.6767677 -0.4747475  3.4141414 -1  1 4 1  \n36  -0.01119055  0.6767677 -0.4747475 -3.5858586 -1 -1 4 1  \n37           NA         NA         NA         NA  1 -1 2 1  \n371          NA         NA         NA         NA  1 -1 2 2  \n38   0.16441628 -0.3232323  0.5252525  0.4141414  1 -1 4 1  \n39           NA         NA         NA         NA  1 -1 2 1  \n391          NA         NA         NA         NA  1 -1 2 2  \n40   0.57436307  0.6767677  0.5252525 -0.5858586 -1  1 4 1  \n41           NA         NA         NA         NA  1 -1 2 1  \n411          NA         NA         NA         NA  1 -1 2 2  \n42   0.53365566 -0.3232323 -0.4747475 -1.5858586 -1  1 4 1  \n43           NA         NA         NA         NA -1  1 2 1  \n431          NA         NA         NA         NA -1  1 2 2  \n44   1.40689797 -0.3232323 -0.4747475 -2.5858586  1 -1 4 1  \n45           NA         NA         NA         NA  1 -1 2 1  \n451          NA         NA         NA         NA  1 -1 2 2  \n46  -1.27658692 -0.3232323 -0.4747475 -3.5858586  1 -1 4 1  ",
            "text/latex": "A data.frame: 21 x 27\n\\begin{tabular}{r|lllllllllllllllllllllllllll}\n  & id & o11 & o12 & o13 & o14 & a1 & r & o21 & o22 & a2 & y & rerand & o11c & o12c & o13c & o14c & o22c & o14cnr & o13cnr & o12cnr & o11cnr & o22cnr & o21cnr & z1 & z2 & w & obs\\\\\n  & <int> & <int> & <dbl> & <int> & <int> & <int> & <int> & <int> & <int> & <dbl> & <int> & <int> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n\\hline\n\t32 & 32 & 0 & -2.85948543 & 0 & 1 &  1 & 1 & NA & 0 & -1 & 5 & 0 & -0.3533333 & -2.73889061 & -0.3133333 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA & -1 &  1 & 2 & 1\\\\\n\t321 & 32 & 0 & -2.85948543 & 0 & 1 &  1 & 1 & NA & 0 &  1 & 5 & 0 & -0.3533333 & -2.73889061 & -0.3133333 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA & -1 &  1 & 2 & 2\\\\\n\t33 & 33 & 1 & -1.19879945 & 1 & 1 &  1 & 0 &  6 & 1 &  1 & 3 & 1 &  0.6466667 & -1.07820463 &  0.6866667 &  0.1933333 &  0.5466667 &  0.1919192 &  0.7070707 & -1.05412743 &  0.6767677 &  0.5252525 &  1.4141414 & -1 & -1 & 4 & 1\\\\\n\t34 & 34 & 0 &  0.09602856 & 0 & 1 &  1 & 0 &  7 & 0 &  1 & 2 & 1 & -0.3533333 &  0.21662338 & -0.3133333 &  0.1933333 & -0.4533333 &  0.1919192 & -0.2929293 &  0.24070059 & -0.3232323 & -0.4747475 &  2.4141414 & -1 & -1 & 4 & 1\\\\\n\t35 & 35 & 1 &  0.46216646 & 0 & 1 &  1 & 0 &  8 & 0 & -1 & 5 & 1 &  0.6466667 &  0.58276128 & -0.3133333 &  0.1933333 & -0.4533333 &  0.1919192 & -0.2929293 &  0.60683848 &  0.6767677 & -0.4747475 &  3.4141414 & -1 &  1 & 4 & 1\\\\\n\t36 & 36 & 1 & -0.15586258 & 0 & 1 & -1 & 0 &  1 & 0 &  1 & 1 & 1 &  0.6466667 & -0.03526776 & -0.3133333 &  0.1933333 & -0.4533333 &  0.1919192 & -0.2929293 & -0.01119055 &  0.6767677 & -0.4747475 & -3.5858586 & -1 & -1 & 4 & 1\\\\\n\t37 & 37 & 0 &  0.87496507 & 0 & 1 & -1 & 1 & NA & 1 & -1 & 1 & 0 & -0.3533333 &  0.99555989 & -0.3133333 &  0.1933333 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 1\\\\\n\t371 & 37 & 0 &  0.87496507 & 0 & 1 & -1 & 1 & NA & 1 &  1 & 1 & 0 & -0.3533333 &  0.99555989 & -0.3133333 &  0.1933333 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 2\\\\\n\t38 & 38 & 0 &  0.01974426 & 1 & 0 & -1 & 0 &  5 & 1 & -1 & 3 & 1 & -0.3533333 &  0.14033908 &  0.6866667 & -0.8066667 &  0.5466667 & -0.8080808 &  0.7070707 &  0.16441628 & -0.3232323 &  0.5252525 &  0.4141414 &  1 & -1 & 4 & 1\\\\\n\t39 & 39 & 1 &  1.52923952 & 1 & 1 & -1 & 1 & NA & 1 & -1 & 3 & 0 &  0.6466667 &  1.64983435 &  0.6866667 &  0.1933333 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 1\\\\\n\t391 & 39 & 1 &  1.52923952 & 1 & 1 & -1 & 1 & NA & 1 &  1 & 3 & 0 &  0.6466667 &  1.64983435 &  0.6866667 &  0.1933333 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 2\\\\\n\t40 & 40 & 1 &  0.42969104 & 0 & 0 &  1 & 0 &  4 & 1 & -1 & 2 & 1 &  0.6466667 &  0.55028587 & -0.3133333 & -0.8066667 &  0.5466667 & -0.8080808 & -0.2929293 &  0.57436307 &  0.6767677 &  0.5252525 & -0.5858586 & -1 &  1 & 4 & 1\\\\\n\t41 & 41 & 0 &  0.38763663 & 1 & 1 & -1 & 1 & NA & 0 & -1 & 4 & 0 & -0.3533333 &  0.50823145 &  0.6866667 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 1\\\\\n\t411 & 41 & 0 &  0.38763663 & 1 & 1 & -1 & 1 & NA & 0 &  1 & 4 & 0 & -0.3533333 &  0.50823145 &  0.6866667 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 2\\\\\n\t42 & 42 & 0 &  0.38898363 & 0 & 1 &  1 & 0 &  3 & 0 & -1 & 4 & 1 & -0.3533333 &  0.50957845 & -0.3133333 &  0.1933333 & -0.4533333 &  0.1919192 & -0.2929293 &  0.53365566 & -0.3232323 & -0.4747475 & -1.5858586 & -1 &  1 & 4 & 1\\\\\n\t43 & 43 & 0 &  0.15206684 & 0 & 0 &  1 & 1 & NA & 1 & -1 & 5 & 0 & -0.3533333 &  0.27266166 & -0.3133333 & -0.8066667 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA & -1 &  1 & 2 & 1\\\\\n\t431 & 43 & 0 &  0.15206684 & 0 & 0 &  1 & 1 & NA & 1 &  1 & 5 & 0 & -0.3533333 &  0.27266166 & -0.3133333 & -0.8066667 &  0.5466667 &         NA &         NA &          NA &         NA &         NA &         NA & -1 &  1 & 2 & 2\\\\\n\t44 & 44 & 0 &  1.26222594 & 0 & 1 & -1 & 0 &  2 & 0 & -1 & 3 & 1 & -0.3533333 &  1.38282076 & -0.3133333 &  0.1933333 & -0.4533333 &  0.1919192 & -0.2929293 &  1.40689797 & -0.3232323 & -0.4747475 & -2.5858586 &  1 & -1 & 4 & 1\\\\\n\t45 & 45 & 1 &  1.07428564 & 1 & 1 & -1 & 1 & NA & 0 & -1 & 3 & 0 &  0.6466667 &  1.19488046 &  0.6866667 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 1\\\\\n\t451 & 45 & 1 &  1.07428564 & 1 & 1 & -1 & 1 & NA & 0 &  1 & 3 & 0 &  0.6466667 &  1.19488046 &  0.6866667 &  0.1933333 & -0.4533333 &         NA &         NA &          NA &         NA &         NA &         NA &  1 & -1 & 2 & 2\\\\\n\t46 & 46 & 0 & -1.42125894 & 0 & 0 & -1 & 0 &  1 & 0 & -1 & 3 & 1 & -0.3533333 & -1.30066412 & -0.3133333 & -0.8066667 & -0.4533333 & -0.8080808 & -0.2929293 & -1.27658692 & -0.3232323 & -0.4747475 & -3.5858586 &  1 & -1 & 4 & 1\\\\\n\\end{tabular}\n",
            "text/markdown": "\nA data.frame: 21 x 27\n\n| <!--/--> | id &lt;int&gt; | o11 &lt;int&gt; | o12 &lt;dbl&gt; | o13 &lt;int&gt; | o14 &lt;int&gt; | a1 &lt;int&gt; | r &lt;int&gt; | o21 &lt;int&gt; | o22 &lt;int&gt; | a2 &lt;dbl&gt; | ... ... | o14cnr &lt;dbl&gt; | o13cnr &lt;dbl&gt; | o12cnr &lt;dbl&gt; | o11cnr &lt;dbl&gt; | o22cnr &lt;dbl&gt; | o21cnr &lt;dbl&gt; | z1 &lt;dbl&gt; | z2 &lt;dbl&gt; | w &lt;dbl&gt; | obs &lt;dbl&gt; |\n|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n| 32 | 32 | 0 | -2.85948543 | 0 | 1 |  1 | 1 | NA | 0 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA | -1 |  1 | 2 | 1 |\n| 321 | 32 | 0 | -2.85948543 | 0 | 1 |  1 | 1 | NA | 0 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA | -1 |  1 | 2 | 2 |\n| 33 | 33 | 1 | -1.19879945 | 1 | 1 |  1 | 0 |  6 | 1 |  1 | ... |  0.1919192 |  0.7070707 | -1.05412743 |  0.6767677 |  0.5252525 |  1.4141414 | -1 | -1 | 4 | 1 |\n| 34 | 34 | 0 |  0.09602856 | 0 | 1 |  1 | 0 |  7 | 0 |  1 | ... |  0.1919192 | -0.2929293 |  0.24070059 | -0.3232323 | -0.4747475 |  2.4141414 | -1 | -1 | 4 | 1 |\n| 35 | 35 | 1 |  0.46216646 | 0 | 1 |  1 | 0 |  8 | 0 | -1 | ... |  0.1919192 | -0.2929293 |  0.60683848 |  0.6767677 | -0.4747475 |  3.4141414 | -1 |  1 | 4 | 1 |\n| 36 | 36 | 1 | -0.15586258 | 0 | 1 | -1 | 0 |  1 | 0 |  1 | ... |  0.1919192 | -0.2929293 | -0.01119055 |  0.6767677 | -0.4747475 | -3.5858586 | -1 | -1 | 4 | 1 |\n| 37 | 37 | 0 |  0.87496507 | 0 | 1 | -1 | 1 | NA | 1 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 1 |\n| 371 | 37 | 0 |  0.87496507 | 0 | 1 | -1 | 1 | NA | 1 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 2 |\n| 38 | 38 | 0 |  0.01974426 | 1 | 0 | -1 | 0 |  5 | 1 | -1 | ... | -0.8080808 |  0.7070707 |  0.16441628 | -0.3232323 |  0.5252525 |  0.4141414 |  1 | -1 | 4 | 1 |\n| 39 | 39 | 1 |  1.52923952 | 1 | 1 | -1 | 1 | NA | 1 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 1 |\n| 391 | 39 | 1 |  1.52923952 | 1 | 1 | -1 | 1 | NA | 1 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 2 |\n| 40 | 40 | 1 |  0.42969104 | 0 | 0 |  1 | 0 |  4 | 1 | -1 | ... | -0.8080808 | -0.2929293 |  0.57436307 |  0.6767677 |  0.5252525 | -0.5858586 | -1 |  1 | 4 | 1 |\n| 41 | 41 | 0 |  0.38763663 | 1 | 1 | -1 | 1 | NA | 0 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 1 |\n| 411 | 41 | 0 |  0.38763663 | 1 | 1 | -1 | 1 | NA | 0 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 2 |\n| 42 | 42 | 0 |  0.38898363 | 0 | 1 |  1 | 0 |  3 | 0 | -1 | ... |  0.1919192 | -0.2929293 |  0.53365566 | -0.3232323 | -0.4747475 | -1.5858586 | -1 |  1 | 4 | 1 |\n| 43 | 43 | 0 |  0.15206684 | 0 | 0 |  1 | 1 | NA | 1 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA | -1 |  1 | 2 | 1 |\n| 431 | 43 | 0 |  0.15206684 | 0 | 0 |  1 | 1 | NA | 1 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA | -1 |  1 | 2 | 2 |\n| 44 | 44 | 0 |  1.26222594 | 0 | 1 | -1 | 0 |  2 | 0 | -1 | ... |  0.1919192 | -0.2929293 |  1.40689797 | -0.3232323 | -0.4747475 | -2.5858586 |  1 | -1 | 4 | 1 |\n| 45 | 45 | 1 |  1.07428564 | 1 | 1 | -1 | 1 | NA | 0 | -1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 1 |\n| 451 | 45 | 1 |  1.07428564 | 1 | 1 | -1 | 1 | NA | 0 |  1 | ... |         NA |         NA |          NA |         NA |         NA |         NA |  1 | -1 | 2 | 2 |\n| 46 | 46 | 0 | -1.42125894 | 0 | 0 | -1 | 0 |  1 | 0 | -1 | ... | -0.8080808 | -0.2929293 | -1.27658692 | -0.3232323 | -0.4747475 | -3.5858586 |  1 | -1 | 4 | 1 |\n\n",
            "text/html": "<table>\n<caption>A data.frame: 21 x 27</caption>\n<thead>\n\t<tr><th></th><th scope=col>id</th><th scope=col>o11</th><th scope=col>o12</th><th scope=col>o13</th><th scope=col>o14</th><th scope=col>a1</th><th scope=col>r</th><th scope=col>o21</th><th scope=col>o22</th><th scope=col>a2</th><th scope=col>...</th><th scope=col>o14cnr</th><th scope=col>o13cnr</th><th scope=col>o12cnr</th><th scope=col>o11cnr</th><th scope=col>o22cnr</th><th scope=col>o21cnr</th><th scope=col>z1</th><th scope=col>z2</th><th scope=col>w</th><th scope=col>obs</th></tr>\n\t<tr><th></th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>...</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n</thead>\n<tbody>\n\t<tr><th scope=row>32</th><td>32</td><td>0</td><td>-2.85948543</td><td>0</td><td>1</td><td> 1</td><td>1</td><td>NA</td><td>0</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td>-1</td><td> 1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>321</th><td>32</td><td>0</td><td>-2.85948543</td><td>0</td><td>1</td><td> 1</td><td>1</td><td>NA</td><td>0</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td>-1</td><td> 1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>33</th><td>33</td><td>1</td><td>-1.19879945</td><td>1</td><td>1</td><td> 1</td><td>0</td><td> 6</td><td>1</td><td> 1</td><td>...</td><td> 0.1919192</td><td> 0.7070707</td><td>-1.05412743</td><td> 0.6767677</td><td> 0.5252525</td><td> 1.4141414</td><td>-1</td><td>-1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>34</th><td>34</td><td>0</td><td> 0.09602856</td><td>0</td><td>1</td><td> 1</td><td>0</td><td> 7</td><td>0</td><td> 1</td><td>...</td><td> 0.1919192</td><td>-0.2929293</td><td> 0.24070059</td><td>-0.3232323</td><td>-0.4747475</td><td> 2.4141414</td><td>-1</td><td>-1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>35</th><td>35</td><td>1</td><td> 0.46216646</td><td>0</td><td>1</td><td> 1</td><td>0</td><td> 8</td><td>0</td><td>-1</td><td>...</td><td> 0.1919192</td><td>-0.2929293</td><td> 0.60683848</td><td> 0.6767677</td><td>-0.4747475</td><td> 3.4141414</td><td>-1</td><td> 1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>36</th><td>36</td><td>1</td><td>-0.15586258</td><td>0</td><td>1</td><td>-1</td><td>0</td><td> 1</td><td>0</td><td> 1</td><td>...</td><td> 0.1919192</td><td>-0.2929293</td><td>-0.01119055</td><td> 0.6767677</td><td>-0.4747475</td><td>-3.5858586</td><td>-1</td><td>-1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>37</th><td>37</td><td>0</td><td> 0.87496507</td><td>0</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>1</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>371</th><td>37</td><td>0</td><td> 0.87496507</td><td>0</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>1</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>38</th><td>38</td><td>0</td><td> 0.01974426</td><td>1</td><td>0</td><td>-1</td><td>0</td><td> 5</td><td>1</td><td>-1</td><td>...</td><td>-0.8080808</td><td> 0.7070707</td><td> 0.16441628</td><td>-0.3232323</td><td> 0.5252525</td><td> 0.4141414</td><td> 1</td><td>-1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>39</th><td>39</td><td>1</td><td> 1.52923952</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>1</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>391</th><td>39</td><td>1</td><td> 1.52923952</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>1</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>40</th><td>40</td><td>1</td><td> 0.42969104</td><td>0</td><td>0</td><td> 1</td><td>0</td><td> 4</td><td>1</td><td>-1</td><td>...</td><td>-0.8080808</td><td>-0.2929293</td><td> 0.57436307</td><td> 0.6767677</td><td> 0.5252525</td><td>-0.5858586</td><td>-1</td><td> 1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>41</th><td>41</td><td>0</td><td> 0.38763663</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>0</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>411</th><td>41</td><td>0</td><td> 0.38763663</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>0</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>42</th><td>42</td><td>0</td><td> 0.38898363</td><td>0</td><td>1</td><td> 1</td><td>0</td><td> 3</td><td>0</td><td>-1</td><td>...</td><td> 0.1919192</td><td>-0.2929293</td><td> 0.53365566</td><td>-0.3232323</td><td>-0.4747475</td><td>-1.5858586</td><td>-1</td><td> 1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>43</th><td>43</td><td>0</td><td> 0.15206684</td><td>0</td><td>0</td><td> 1</td><td>1</td><td>NA</td><td>1</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td>-1</td><td> 1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>431</th><td>43</td><td>0</td><td> 0.15206684</td><td>0</td><td>0</td><td> 1</td><td>1</td><td>NA</td><td>1</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td>-1</td><td> 1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>44</th><td>44</td><td>0</td><td> 1.26222594</td><td>0</td><td>1</td><td>-1</td><td>0</td><td> 2</td><td>0</td><td>-1</td><td>...</td><td> 0.1919192</td><td>-0.2929293</td><td> 1.40689797</td><td>-0.3232323</td><td>-0.4747475</td><td>-2.5858586</td><td> 1</td><td>-1</td><td>4</td><td>1</td></tr>\n\t<tr><th scope=row>45</th><td>45</td><td>1</td><td> 1.07428564</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>0</td><td>-1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>1</td></tr>\n\t<tr><th scope=row>451</th><td>45</td><td>1</td><td> 1.07428564</td><td>1</td><td>1</td><td>-1</td><td>1</td><td>NA</td><td>0</td><td> 1</td><td>...</td><td>        NA</td><td>        NA</td><td>         NA</td><td>        NA</td><td>        NA</td><td>        NA</td><td> 1</td><td>-1</td><td>2</td><td>2</td></tr>\n\t<tr><th scope=row>46</th><td>46</td><td>0</td><td>-1.42125894</td><td>0</td><td>0</td><td>-1</td><td>0</td><td> 1</td><td>0</td><td>-1</td><td>...</td><td>-0.8080808</td><td>-0.2929293</td><td>-1.27658692</td><td>-0.3232323</td><td>-0.4747475</td><td>-3.5858586</td><td> 1</td><td>-1</td><td>4</td><td>1</td></tr>\n</tbody>\n</table>\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "The model we'll fit is as follows:\n$$E[Y\\mid A_1, A_2] = \\beta_0 + \\beta_1 A_1 + \\beta_2 A_2 + \\beta_3 A_1 A_2.$$\nNotice that the combination of $A_1$ and $A_2$ uniquely identifies an embedded adaptive intervention, and so we can estimate means of all embededed AIs using this model:\n\n| Adaptive Intervention | &nbsp;&nbsp; Mean $Y$ under AI &nbsp;&nbsp;&nbsp;&nbsp; |\n|-----------------------|:--------------------------------------------:|\n| (MED, AUGMENT) = (-1, -1) | $\\beta_0 - \\beta_1 - \\beta_2 + \\beta_3$ |\n| (BMOD, AUGMENT) = (1, -1) | $\\beta_0 + \\beta_1 - \\beta_2 - \\beta_3$ |\n| (MED, INTENSIFY) = (-1, 1) | $\\beta_0 - \\beta_1 + \\beta_2 - \\beta_3$ |\n| (BMOD, INTENSIFY) = (1, 1) | $\\beta_0 + \\beta_1 + \\beta_2 + \\beta_3$ | \n\nAs before, we can identify linear combinations of the regression parameters which represent differences in mean outcomes between two embedded adaptive interventions. For example, the contrast we considered in [Part (a)](#part-a) (`model5`) between (MED, AUGMENT) and (BMOD, AUGMENT) is now written as $E[Y\\mid A_1 = -1, A_2 = -1] - E[Y\\mid A_1 = 1, A_2 = -1] = -2\\beta_1 + 2\\beta_3$. \n\nWe input the model into R as `y ~ a1 * a2`. The `*` character is a shortcut for main effects of `a1` and `a2`, as well as their interaction (programmed in R as `a1:a2`). "
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "## Conduct a regression analysis to compare mean outcomes under AI#1 vs AI#2\n## x:z = interaction term between x and z\n## x*z is shorthand for: x + z + x:z\nmodel7 <- geeglm(y ~ a1*a2, weights = w, id = id, data = adhd.rep)\n\nestimate(model7,\n         rbind(\n           # These statements get the mean under each AI\n           \"Mean Y: AI#1 (MED, AUGMENT)\"    = c(1, -1, -1,  1),\n           \"Mean Y: AI#2 (BMOD, AUGMENT)\"   = c(1,  1, -1, -1),\n           \"Mean Y: AI#3 (MED, INTENSIFY)\"  = c(1, -1,  1, -1),\n           \"Mean Y: AI#4 (BMOD, INTENSIFY)\" = c(1,  1,  1,  1),\n           # These statements are to get all pairwise comparisons\n           \"Diff: AI#1 - AI#2\"              = c(0, -2,  0,  2),\n           \"Diff: AI#1 - AI#3\"              = c(0,  0, -2,  2),\n           \"Diff: AI#1 - AI#4\"              = c(0, -2, -2,  0),\n           \"Diff: AI#2 - AI#3\"              = c(0,  2, -2,  0),\n           \"Diff: AI#2 - AI#4\"              = c(0,  0, -2, -2),\n           \"Diff: AI#3 - AI#4\"              = c(0, -2,  0, -2)))",
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "                               Estimate 95% LCL 95% UCL     SE p-value\nMean Y: AI#1 (MED, AUGMENT)      2.8649  2.5305  3.1992 0.1706  <1e-04\nMean Y: AI#2 (BMOD, AUGMENT)     3.5067  3.1643  3.8490 0.1747  <1e-04\nMean Y: AI#3 (MED, INTENSIFY)    2.7895  2.4644  3.1145 0.1658  <1e-04\nMean Y: AI#4 (BMOD, INTENSIFY)   2.6533  2.2515  3.0552 0.2050  <1e-04\nDiff: AI#1 - AI#2               -0.6418 -1.1203 -0.1633 0.2442  0.0086\nDiff: AI#1 - AI#3                0.0754 -0.3106  0.4614 0.1969  0.7018\nDiff: AI#1 - AI#4                0.2115 -0.3112  0.7343 0.2667  0.4277\nDiff: AI#2 - AI#3                0.7172  0.2451  1.1893 0.2409  0.0029\nDiff: AI#2 - AI#4                0.8533  0.3733  1.3334 0.2449  0.0005\nDiff: AI#3 - AI#4                0.1361 -0.3807  0.6530 0.2637  0.6057"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {},
      "cell_type": "markdown",
      "source": "Notice that the estimated difference in mean outcomes between (MED, AUGMENT) and (BMOD, AUGMENT), $-2\\hat{\\beta}_1 + 2\\hat{\\beta}_3$, is identical to the result from `model5` in [Part (a)](#part-a) (including the standard error). The weighted-and-replicated regression allows us to achieve the same results as individual regressions for particular contrasts, but with the benefit of allowing us to examine all such contrasts simultaneously. \n\nAs before, we can adjust for prognostic baseline covariates in order to improve the efficiency of the estimates. We'll again add $O_{12c}$ and $O_{14c}$ to the model. *Note that we are careful to not adjust for post-baseline or time-varying covariates or intermediate outcomes here -- doing so will lead to causal bias.*"
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "model8 <- geeglm(y ~ a1 + a2 + o12c + o14c + a1:a2, weights = w, id = id,\n                 data = adhd.rep)\n\nestimate(model8,\n         rbind(\"Mean Y: AI#1 (MED, AUGMENT)\"    = c(1, -1, -1, 0, 0,  1),\n               \"Mean Y: AI#2 (BMOD, AUGMENT)\"   = c(1,  1, -1, 0, 0, -1),\n               \"Mean Y: AI#3 (MED, INTENSIFY)\"  = c(1, -1,  1, 0, 0, -1),\n               \"Mean Y: AI#4 (BMOD, INTENSIFY)\" = c(1,  1,  1, 0, 0,  1),\n               \"Diff: AI#1 - AI#2\"              = c(0, -2,  0, 0, 0,  2),\n               \"Diff: AI#1 - AI#3\"              = c(0,  0, -2, 0, 0,  2),\n               \"Diff: AI#1 - AI#4\"              = c(0, -2, -2, 0, 0,  0),\n               \"Diff: AI#2 - AI#3\"              = c(0,  2, -2, 0, 0,  0),\n               \"Diff: AI#2 - AI#4\"              = c(0,  0, -2, 0, 0, -2),\n               \"Diff: AI#3 - AI#4\"              = c(0, -2,  0, 0, 0, -2)))",
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "                               Estimate 95% LCL 95% UCL     SE p-value\nMean Y: AI#1 (MED, AUGMENT)      2.8801  2.5869  3.1733 0.1496  <1e-04\nMean Y: AI#2 (BMOD, AUGMENT)     3.3854  3.0689  3.7018 0.1614  <1e-04\nMean Y: AI#3 (MED, INTENSIFY)    2.8149  2.5163  3.1135 0.1524  <1e-04\nMean Y: AI#4 (BMOD, INTENSIFY)   2.7338  2.3596  3.1081 0.1909  <1e-04\nDiff: AI#1 - AI#2               -0.5053 -0.9401 -0.0704 0.2219  0.0228\nDiff: AI#1 - AI#3                0.0652 -0.2811  0.4115 0.1767  0.7120\nDiff: AI#1 - AI#4                0.1463 -0.3271  0.6197 0.2415  0.5447\nDiff: AI#2 - AI#3                0.5705  0.1321  1.0088 0.2236  0.0107\nDiff: AI#2 - AI#4                0.6516  0.2100  1.0931 0.2253  0.0038\nDiff: AI#3 - AI#4                0.0811 -0.3967  0.5588 0.2437  0.7394"
          },
          "metadata": {}
        }
      ]
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "markdown",
      "source": "Notice, now that we've adjusted for basline, we again see improved efficiency in our estimates relative to `model7` above. However, even more interestingly, we also see improved efficiency relative to `model6`, in which we compared two adaptive interventions while adjusting for these same baseline covariates. The point estimates remain about the same (though, again, when we adjust for covariates we are addressing a slightly different scientific question relative to when we do not)."
    },
    {
      "metadata": {
        "trusted": true
      },
      "cell_type": "code",
      "source": "",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "r",
      "display_name": "R",
      "language": "R"
    },
    "language_info": {
      "mimetype": "text/x-r-source",
      "name": "R",
      "pygments_lexer": "r",
      "version": "3.5.3",
      "file_extension": ".r",
      "codemirror_mode": "r"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}